start:
    # print prompt "Enter the number of terms to calculate: "
    push 'E'; printc
    push 'n'; printc
    push 't'; printc
    push 'e'; printc
    push 'r'; printc
    push ' '; printc
    push 't'; printc
    push 'h'; printc
    push 'e'; printc
    push ' '; printc
    push 'n'; printc
    push 'u'; printc
    push 'm'; printc
    push 'b'; printc
    push 'e'; printc
    push 'r'; printc
    push ' '; printc
    push 'o'; printc
    push 'f'; printc
    push ' '; printc
    push 't'; printc
    push 'e'; printc
    push 'r'; printc
    push 'm'; printc
    push 's'; printc
    push ' '; printc
    push 't'; printc
    push 'o'; printc
    push ' '; printc
    push 'c'; printc
    push 'a'; printc
    push 'l'; printc
    push 'c'; printc
    push 'u'; printc
    push 'l'; printc
    push 'a'; printc
    push 't'; printc
    push 'e'; printc
    push ':'; printc
    push ' '; printc

    # read integer n
    push 0
    dup
    readi
    retrieve

    # reject n < 0
    dup; jn start

    # store the first two terms: f(0) = 0, f(1) = 1
    push 0; dup; store
    push 1; dup; store
loop:
    # break if n == 0
    dup; jz .loop_break

    # push 0, f(i+1), 1, and f(i)
    push 0
    push 1; retrieve
    push 1
    push 0; retrieve

    # print f(i)
    dup; printi
    push '\n'; printc

    # f(i+1) = f(i) + f(i+1)
    copy 2
    add
    store

    # f(i) = f(i+1)
    store

    # n--
    push 1
    sub

    jmp loop
.loop_break:
    drop
    end
